spring:
  application:
    name: USER-SERVICE

  datasource:
    url: jdbc:postgresql://localhost:5432/user_db
    username: postgres
    password: postgresql
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  liquibase:
    change-log: classpath:db/migration/user/user_changelog.yaml

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 381130586311-n9unbc884cj81vsc4dv8t95n70d262uv.apps.googleusercontent.com
            client-secret: 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
            scope:
              - openid
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

server:
  port: 8081
  servlet:
    context-path: /api/v1

jwt:
  secret: fcf874fcd1aa0350827b3f6ea78bd67bdd8d6b623f434fe6ace26382de3b3f82
  expiration-ms: 3600000

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true   # Register this service with Eureka
    fetch-registry: true
  instance:
    prefer-ip-address: true
